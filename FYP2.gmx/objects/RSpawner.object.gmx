<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>TmpSpawner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>seconds = 0;
randomize();

particle = part_system_create();
part_system_depth(particle,50);
sparkle = part_type_create();
particle_emitter = part_emitter_create(particle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>seconds += 1 / room_speed;
image_speed = 10/60;

if(PVPgui.sec &gt; 0)
{
    if(seconds &gt;= 3)
    {
        switch(irandom_range(1,3))
        {
            case 1:
                instance_create(x, y, REnemyShooting);
                break;
            case 2:
            
                instance_create(x, y, REnemy);
                break;
                
            case 3:
                instance_create(x, y, REnemyElite);
                break;
        }
        seconds = 0;
    }
}

if(PVPgui.sec &gt;= 0)
{
    part_type_shape(sparkle,pt_shape_spark);
    part_type_orientation(sparkle,0,0,0,0,1);
    part_type_size(sparkle,0.2,0.2,0,0);
    part_type_colour_rgb(sparkle,255,255,255,255,0,0);
    part_type_speed(sparkle,1,1.5,0.05,0);
    part_type_direction(sparkle,270,270,0,4);
    part_type_life(sparkle,20,50);
    
    part_emitter_region(particle,particle_emitter,x - 60, x + 60,y,y,ps_shape_ellipse,ps_distr_linear);
    part_emitter_stream(particle,particle_emitter,sparkle,1);
}
else
{
    part_emitter_destroy_all(particle);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
