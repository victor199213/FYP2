<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Properties of a Handgun
Handgun_ammo = 20;
Handgun_maxAmmo = 20;

// Reload speed of the handgun. Cannot be upgraded
Handgun_reloadSpeed = 1;
Handgun_reloadTime = 0;
Handgun_isReload = false;

// Magazines of handgun, and the total number of magazines you can hold. Can be upgraded
Handgun_magazine = 1;
Handgun_maxMagazineIncrement = 1;
Handgun_baseMagazine = 2;
Handgun_maxMagazine = 2;
// Maximum number of Magazines upgrade
Handgun_maxMagazineLevel = 1;
Handgun_maxMagazineUpgradeCost = 10;

// Damage of the handgun. Can be upgraded
Handgun_damage = 40;
Handgun_damageIncrement = 5;
Handgun_baseDamage = 30;
Handgun_maxDamage = 100;
// Damage upgrade
Handgun_damageLevel = 1;
Handgun_damageUpgradeCost = 15;

// Fire rate of the handgun. Can be upgraded
Handgun_cooldown = 1;
Handgun_cooldownIncrement = 0.1;
Handgun_maxcooldown = 0.5;
Handgun_basecooldown = 1;
Handgun_cooldown_timer = 0;
// Handgun's fire rate upgrade
Handgun_cooldownLevel = 1;
Handgun_cooldownUpgradeCost = 30;

// Handgun's upgrades available, and its cost
Handgun_MaxLevel = 3;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Properties of an AK-47
AK47_ammo = 30;
AK47_maxAmmo = 30;

// Reload speed of the AK-47. Cannot be upgraded
AK47_reloadSpeed = 0.6;
AK47_reloadTime = 0;
AK47_isReload = false;

// Magazines of handgun, and the total number of magazines you can hold. Can be upgraded
AK47_magazine = 1;
AK47_maxMagazineIncrement = 2;
AK47_baseMagazine = 1;
AK47_maxMagazine = 3;
// Maximum number of Magazines upgrade
AK47_maxMagazineLevel = 1;
AK47_maxMagazineUpgradeCost = 20;

// Damage of the AK-47. Can be upgraded
AK47_damage = 15;
AK47_damageIncrement = 2.5;
AK47_baseDamage = 10;
AK47_maxDamage = 20;
// Damage upgrade
AK47_damageLevel = 1;
AK47_damageUpgradeCost = 5;

// Fire rate of the AK-47. Can be upgraded
AK47_cooldown = 3 / 5;
AK47_cooldownIncrement = 1 / 10;
AK47_maxcooldown = 1 / 5;
AK47_basecooldown = 3 / 5;
AK47_cooldown_timer = 0;
// AK-47's fire rate upgrade
AK47_cooldownLevel = 1;
AK47_cooldownUpgradeCost = 30;

// AK-47's upgrades available, and its cost
AK47_MaxLevel = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update upgraded stats for weapons
if (instance_exists(Player))
{
    switch (Player.i_currEquip)
    {
        default:
        break;
        
        case 1:
        script_execute(EquipOne_Load_Stats);
        break;
        
        case 2:
        script_execute(EquipTwo_Load_Stats);
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
